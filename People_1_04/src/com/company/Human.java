package com.company;    // папка, в якій розміщено клас

import java.util.GregorianCalendar;     // імпортування класу дати

public class Human {    // оголошення класу людини
    int id;
    String name;    // поле імені людини, далі прізвище і рік народження
    String surname;
    int birth;
    int father;   // поле батька, яке цього ж класу, як і поле матері
    int mother;
    int[] children;   // поле дітей, як масив
    //################################################################################################################################################################################################
    Human() {    // конструктор по замовчуванню
        id=-100000;
        name = "?";   // у поля записуються значення по замовчуванню
        surname = "?";
        birth = -100000;
        father = -100000;
        mother = -100000;
        children=null;
    }
    //################################################################################################################################################################################################
    Human(int idValue,String nameValue, String surnameValue, int birthValue) {    // конструктор з параметрами, перевантажує верхній конструктор
        // отримує значення конкретних типів і записує їх у конкретні змінні
        id=idValue;
        name = nameValue;   // із цих змінних передані у клас значення записуються у відповідні поля
        surname = surnameValue;
        birth = birthValue;
        father = -100000;  // а у ці поля записуються значення по замовчуванню
        mother = -100000;
        children = null;
    }
    //################################################################################################################################################################################################
    Human(int idValue,String nameValue, String surnameValue, int birthValue,int fatherValue, int motherValue, int ... childrenValue) {    // конструктор з параметрами, останній з яких змінної довжини, також перевантажує інші конструктори
        // отримує значення конкретних типів і записує їх у конкретні змінні
        id=idValue;
        name = nameValue;   // із цих змінних передані у клас значення записуються у відповідні поля
        surname = surnameValue;
        birth = birthValue;
        father = fatherValue;
        mother = motherValue;
        children = childrenValue;
    }
    //################################################################################################################################################################################################
    void print() {      // метод що нічого не отримує(пусті дужки()) і не повертає(void),
        System.out.println(id+" "+name + " " + surname + " " + birth);     // а просто друкує перші три поля
    }
    //################################################################################################################################################################################################
    String druk() {      // метод що нічого не отримує(пусті дужки()) і повертає рядок опису об'єкта,
        return  id+" " +name + " " + surname + " " + birth;     // повернення значень полів
    }
    //################################################################################################################################################################################################
    int getAge(int thisYear) {      // метод що отримує ціле чисто(рік) і не повертає ціле число(вік)
        return thisYear-birth;      // оператор return виконує повернення значення thisYear-birth
    }
    //################################################################################################################################################################################################
    int getAge() {      // метод що повертає ціле число(вік), цей метод перевантажує метод, що вижче
        GregorianCalendar g=new GregorianCalendar();    // створення поточної дати
        return g.getWeekYear()-birth;      // оператор return виконує повернення значення віку, віднявши поточний рік від року народження
    }
    //################################################################################################################################################################################################
    boolean isRelatives(Human H) {      // метод що отримує людину і повертає чи вона родич цій людині
        int l=children.length;      // у змінну l записується довжина масиву children, тобто к-сть дітей поточної людини
        for(int i=0;i<l;i++)     // цикл, що перебере всі дітей
            if (children[i]==H.id)     // якщо поточна дитина і отримана в метод людина однакові
                return true;    // то повертаємо "так" із методу, і метод завершиться, тобто решта команд методу не виконуватимуться
        l=H.children.length;    // у змінну l записується довжина масиву children отриманої в метод людини
        for(int i=0;i<l;i++)   // цикл, що перебере всі дітей
            if (H.children[i]==this.id)    // якщо поточна дитина отриманої в метод людини і дана людина(this) однакові
                return true;    // то повертаємо "так" із методу, і метод завершиться, тобто решта команд методу не виконуватимуться
        if(H.id==father | H.id==mother | H.father==this.id | H.mother==this.id)     // якщо отримана в метод людина та батько даної людини однакові АБО отримана в метод людина та матір даної людини однакові
            // АБО батько отриманої в метод людини та дана людина однакові АБО матір отриманої в метод людини та дана людина однакові
            return true;    // то повертаємо "так" із методу, і метод завершиться, тобто решта команд методу не виконуватимуться
        return false;   // якщо виконання методу дойде сюди, значить родичів не знайдено, тому повертаємо "ні"
    }
    //################################################################################################################################################################################################
    void printRelatives(Human H) {      // метод що отримує людину і нічого не повертає, а друкує ким є отримана людина даній
        int l=children.length;      // у змінну l записується довжина масиву children, тобто к-сть дітей поточної людини
        for(int i=0;i<l;i++)     // цикл, що перебере всі дітей
            if (children[i]==H.id){     // якщо поточна дитина і отримана в метод людина однакові
                System.out.println("Дитина");   // повідомляємо що отримана людина є даній дитиною
                return ; }   // і завершуємо метод
        if( H.mother==mother )     // якщо отримана в метод людина та матір даної людини однакові
        {
            System.out.println("Мати");      // повідомляємо що отримана людина є даній матірю
            return ; }      // і завершуємо метод
        if(H.father==father  )     // якщо отримана в метод людина та батько даної людини однакові
        {
            System.out.println("Батько");   // повідомляємо що отримана людина є даній батьком
            return ; }      // і завершуємо метод
    }
    //################################################################################################################################################################################################
    double dochid(){    // метод що повертає річний дохід
        return 0;   // для звичайної людини він невідомий, тому повертаємо 0
    }
}
